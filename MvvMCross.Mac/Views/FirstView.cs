// This file has been autogenerated from a class added in the UI designer.

using System;
using MvvmCross.Platforms.Mac.Views;
using MvvMCross.Core.ViewModels;
using MvvmCross.Binding.BindingContext;
using Foundation;
using MvvmCross.Platforms.Mac.Presenters.Attributes;
using MvvmCross.Presenters;
using MvvmCross.Presenters.Attributes;
using MvvmCross.ViewModels;
using AppKit;

namespace MvvmCross.Mac
{
    [MvxFromStoryboard("Main")]
    [MvxWindowPresentation(Identifier = "WindowController")]
	public partial class FirstView : MvxViewController<MainViewModel>
    {
		public FirstView (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            var set = this.CreateBindingSet<FirstView, MainViewModel>();
            set.Bind(label).To(vm => vm.Text);
            set.Bind(addButton).To(vm => vm.ResetTextCommand);
            set.Bind(NavigateToSecondViewButton).To(vm => vm.NavigateToSecondViewCommand);
            set.Bind(StartTimerAndShowPopupButton).To(vm => vm.StartTimerCommand);
            set.Bind(StartTimerAndShowPopupButton).For(v => v.Enabled).To(vm => vm.TimerButtonEnabled);
            set.Apply();
        }

        public MvxBasePresentationAttribute PresentationAttribute(MvxViewModelRequest request)
        {
            if (NSApplication.SharedApplication.DangerousWindows.Count == 0)
                return null;

            return new MvxContentPresentationAttribute
            {
                WindowIdentifier = typeof(FirstView).Name
            };
        }
    }
}
